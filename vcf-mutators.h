
/*
 *  Generated by /usr/local/bin/auto-gen-get-set
 *
 *  Mutator macros for setting with no sanity checking.  Use these to
 *  set structure members from functions outside the bl_vcf_t
 *  class.  These macros perform no data validation.  Hence, they achieve
 *  maximum performance where data are guaranteed correct by other means.
 *  Use the mutator functions (same name as the macro, but lower case)
 *  for more robust code with a small performance penalty.
 *
 *  These generated macros are not expected to be perfect.  Check and edit
 *  as needed before adding to your code.
 */

/* temp-vcf-mutators.c */
int bl_vcf_set_chrom_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_chrom_element);
int bl_vcf_set_chrom_cpy(bl_vcf_t *bl_vcf_ptr, char new_chrom[], size_t array_size);
int bl_vcf_set_id_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_id_element);
int bl_vcf_set_id_cpy(bl_vcf_t *bl_vcf_ptr, char new_id[], size_t array_size);
int bl_vcf_set_ref_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_ref_element);
int bl_vcf_set_ref_cpy(bl_vcf_t *bl_vcf_ptr, char new_ref[], size_t array_size);
int bl_vcf_set_alt_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_alt_element);
int bl_vcf_set_alt_cpy(bl_vcf_t *bl_vcf_ptr, char new_alt[], size_t array_size);
int bl_vcf_set_qual_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_qual_element);
int bl_vcf_set_qual_cpy(bl_vcf_t *bl_vcf_ptr, char new_qual[], size_t array_size);
int bl_vcf_set_filter_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_filter_element);
int bl_vcf_set_filter_cpy(bl_vcf_t *bl_vcf_ptr, char new_filter[], size_t array_size);
int bl_vcf_set_info(bl_vcf_t *bl_vcf_ptr, char *new_info);
int bl_vcf_set_info_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_info_element);
int bl_vcf_set_info_cpy(bl_vcf_t *bl_vcf_ptr, char *new_info, size_t array_size);
int bl_vcf_set_format(bl_vcf_t *bl_vcf_ptr, char *new_format);
int bl_vcf_set_format_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_format_element);
int bl_vcf_set_format_cpy(bl_vcf_t *bl_vcf_ptr, char *new_format, size_t array_size);
int bl_vcf_set_single_sample(bl_vcf_t *bl_vcf_ptr, char *new_single_sample);
int bl_vcf_set_single_sample_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char new_single_sample_element);
int bl_vcf_set_single_sample_cpy(bl_vcf_t *bl_vcf_ptr, char *new_single_sample, size_t array_size);
int bl_vcf_set_pos(bl_vcf_t *bl_vcf_ptr, uint64_t new_pos);
int bl_vcf_set_info_len(bl_vcf_t *bl_vcf_ptr, size_t new_info_len);
int bl_vcf_set_info_max(bl_vcf_t *bl_vcf_ptr, size_t new_info_max);
int bl_vcf_set_format_max(bl_vcf_t *bl_vcf_ptr, size_t new_format_max);
int bl_vcf_set_format_len(bl_vcf_t *bl_vcf_ptr, size_t new_format_len);
int bl_vcf_set_sample_max(bl_vcf_t *bl_vcf_ptr, size_t new_sample_max);
int bl_vcf_set_ref_count(bl_vcf_t *bl_vcf_ptr, unsigned new_ref_count);
int bl_vcf_set_alt_count(bl_vcf_t *bl_vcf_ptr, unsigned new_alt_count);
int bl_vcf_set_other_count(bl_vcf_t *bl_vcf_ptr, unsigned new_other_count);
int bl_vcf_set_multi_samples(bl_vcf_t *bl_vcf_ptr, char **new_multi_samples);
int bl_vcf_set_multi_samples_ae(bl_vcf_t *bl_vcf_ptr, size_t c, char *new_multi_samples_element);
int bl_vcf_set_multi_samples_cpy(bl_vcf_t *bl_vcf_ptr, char **new_multi_samples, size_t array_size);
int bl_vcf_set_phreds(bl_vcf_t *bl_vcf_ptr, unsigned char *new_phreds);
int bl_vcf_set_phreds_ae(bl_vcf_t *bl_vcf_ptr, size_t c, unsigned char new_phreds_element);
int bl_vcf_set_phreds_cpy(bl_vcf_t *bl_vcf_ptr, unsigned char *new_phreds, size_t array_size);
int bl_vcf_set_phred_count(bl_vcf_t *bl_vcf_ptr, size_t new_phred_count);
int bl_vcf_set_phred_buff_size(bl_vcf_t *bl_vcf_ptr, size_t new_phred_buff_size);
