
/*
 *  Generated by /usr/local/bin/auto-gen-get-set
 *
 *  Mutator functions for setting with no sanity checking.  Use these to
 *  set structure members from functions outside the bl_bed_t
 *  class.  These macros perform no data validation.  Hence, they achieve
 *  maximum performance where data are guaranteed correct by other means.
 *  Use the mutator functions (same name as the macro, but lower case)
 *  for more robust code with a small performance penalty.
 *
 *  These generated macros are not expected to be perfect.  Check and edit
 *  as needed before adding to your code.
 */

/* temp-bed-mutators.c */
int bl_bed_set_chrom_ae(bl_bed_t *bl_bed_ptr, size_t c, char new_chrom_element);
int bl_bed_set_chrom_cpy(bl_bed_t *bl_bed_ptr, char new_chrom[], size_t array_size);
int bl_bed_set_chrom_start(bl_bed_t *bl_bed_ptr, int64_t new_chrom_start);
int bl_bed_set_chrom_end(bl_bed_t *bl_bed_ptr, int64_t new_chrom_end);
int bl_bed_set_name_ae(bl_bed_t *bl_bed_ptr, size_t c, char new_name_element);
int bl_bed_set_name_cpy(bl_bed_t *bl_bed_ptr, char new_name[], size_t array_size);
int bl_bed_set_score(bl_bed_t *bl_bed_ptr, unsigned short new_score);
int bl_bed_set_strand(bl_bed_t *bl_bed_ptr, char new_strand);
int bl_bed_set_thick_start(bl_bed_t *bl_bed_ptr, int64_t new_thick_start);
int bl_bed_set_thick_end(bl_bed_t *bl_bed_ptr, int64_t new_thick_end);
int bl_bed_set_item_rgb_ae(bl_bed_t *bl_bed_ptr, size_t c, char new_item_rgb_element);
int bl_bed_set_item_rgb_cpy(bl_bed_t *bl_bed_ptr, char new_item_rgb[], size_t array_size);
int bl_bed_set_block_count(bl_bed_t *bl_bed_ptr, unsigned short new_block_count);
int bl_bed_set_block_sizes(bl_bed_t *bl_bed_ptr, int64_t *new_block_sizes);
int bl_bed_set_block_sizes_ae(bl_bed_t *bl_bed_ptr, size_t c, int64_t new_block_sizes_element);
int bl_bed_set_block_sizes_cpy(bl_bed_t *bl_bed_ptr, int64_t *new_block_sizes, size_t array_size);
int bl_bed_set_block_starts(bl_bed_t *bl_bed_ptr, int64_t *new_block_starts);
int bl_bed_set_block_starts_ae(bl_bed_t *bl_bed_ptr, size_t c, int64_t new_block_starts_element);
int bl_bed_set_block_starts_cpy(bl_bed_t *bl_bed_ptr, int64_t *new_block_starts, size_t array_size);
int bl_bed_set_fields(bl_bed_t *bl_bed_ptr, unsigned short new_fields);
