\" Generated by c2man from dsv_read_line.c
.TH dsv_read_line 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <biolibc/dsv.h>
-lbiolibc
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf 
.na
int     dsv_read_line(FILE *stream, dsv_line_t *dsv_line, const char *delims)
.ad
.fi

.SH ARGUMENTS
.nf
.na
stream:     FILE stream from which the line is read
dsv_line:   Pointer to a dsv_line_t structure to hold the fields
delims:     Array of acceptable delimiters
.ad
.fi

.SH DESCRIPTION

Read a line of an arbitrary DSV file, storing the fields in a
dsv_line_t structure, which contains an array of strings, each
holding one field from the line, and an an array of delimiters,
each holding the character that ended the corresponding field.
Note that each field could potentially end with a different
delimiter, as multiple delimiters can be specified.

This function serves a purpose similar to the split() functions
present in many languages.  However, it does not need to read an
entire line into a character array and then split the array.
Instead, it separates fields as they are read from the input stream.

.SH SEE ALSO

dsv_read_field(3), dsv_skip_field(3), dsv_skip_rest_of_line(3)

