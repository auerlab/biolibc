\" Generated by c2man from bl_bed_set_block_sizes_cpy.c
.TH bl_bed_set_block_sizes_cpy 3

.SH LIBRARY
\" Indicate #includes, library name, -L and -l flags
.nf
.na
#include <biolibc/bed.h>
-lbiolibc -lxtend
.ad
.fi

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
int     bl_bed_set_block_sizes_cpy(bl_bed_t *bl_bed_ptr, uint64_t * new_block_sizes, size_t array_size)

.SH ARGUMENTS
.nf
.na
bl_bed_ptr      Pointer to the structure to set
new_block_sizes The new value for block_sizes
array_size      Size of the block_sizes array.
.ad
.fi

.SH DESCRIPTION

Mutator for block_sizes member in a bl_bed_t structure.
Use this function to set block_sizes in a bl_bed_t variable
from non-member functions.  This function copies the array pointed to
by new_block_sizes to ->block_sizes.

Note that there is an equivalent macro BL_BED_SET_BLOCK_SIZES(), which performs
this function with no data verification or function call overhead.
Use the macro version to maximize performance where the validity
of new_block_sizes is guaranteed by other means.

.SH RETURN VALUES

BL_BED_DATA_OK if the new value is acceptable and assigned
BL_BED_DATA_OUT_OF_RANGE otherwise

.SH EXAMPLES
.nf
.na

bl_bed_t        bl_bed;
uint64_t *      new_block_sizes;
size_t          array_size;

if ( bl_bed_set_block_sizes(&bl_bed, new_block_sizes, array_size) == BL_BED_DATA_OK )
{
}
.ad
.fi

.SH SEE ALSO

BL_BED_SET_BLOCK_SIZES(3)

